# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test

on:
  push:
    branches: [ "master", "release" ]
  pull_request:
    branches: [ "master", "release", "reviewed/*" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test ./Formula.SimpleRepo.Tests/Formula.SimpleRepo.Tests.csproj --configuration Release --no-build --results-directory ./test-results --logger "trx;LogFileName=test_results.trx" --verbosity normal --collect:"XPlat Code Coverage"

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      id: test-results
      if: always()
      with:
        trx_files: "test-results/**/*.trx"

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./test-results
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md